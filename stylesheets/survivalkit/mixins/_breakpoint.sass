// experimental - depends on Sass 3.2 or higher
  define your own breakpoints
  styles nested in the mixin will pass thru in @content
  resist the urge to settle on common device sizes
  http://marcdrummond.com/responsive-web-design/2011/12/29/default-breakpoints-are-dead


////////////////////////////
// SURVIVAL KIT - BREAKPOINT
// breakpoint($breakpoint, $media: 'screen')
//
// // create $breakpoint variables like so
// // assume $breakpoint-default-feature if only a number
// $breakpoint1: 500px
// $breakpoint2: 30em
// // set min-width/max-width if both values are numbers
// $breakpoint3: 500px 700px
// // if one value is a string, assume a feature/value pair
// $breakpoint4: min-width 700px
// $breakpoint5: max-width 700px
// // for multidimensional lists, assume each item is a feature/value pair
// $breakpoint6: max-width 700px, orientation portrait
// // handle one-sided features (ie. monochrome)
// $breakpoint7: max-width 700px, orientation portrait, monochrome
// $breakpoint8: monochrome
////////////////////////////

$breakpoint-default-feature: min-width !default

@function breakpoint-concatenate($query-string, $new-value, $feature: $breakpoint-default-feature)
  $new-string: ''
  @if $feature != false
    $new-string: #{$query-string}unquote("and (#{$feature}:  #{$new-value}) ")
  @else
    $new-string: #{$query-string}unquote("and (#{$new-value}) ")
  @return $new-string

=breakpoint($breakpoint, $media: 'screen')
  // initialize string
  $query-string: '#{$media} '
  @if type-of($breakpoint) == number
    // assume max-width if only a number
    $query-string: breakpoint-concatenate($query-string, $breakpoint)
  @if type-of($breakpoint) == string
    // handle one-sided features (ie. monochrome)
    $query-string: breakpoint-concatenate($query-string, $breakpoint, false)
  @else if type-of($breakpoint) == list
    @if (type-of(nth($breakpoint, 1)) == number) and (type-of(nth($breakpoint, 2)) == number)
      // set min/max if both values are numbers
      @if $modular-scale-loaded == true
        $breakpoint: sort-list($breakpoint)
      $query-string: breakpoint-concatenate($query-string, nth($breakpoint, 1), 'min-width')
      $query-string: breakpoint-concatenate($query-string, nth($breakpoint, 2), 'max-width')
    @else if (type-of(nth($breakpoint, 1)) == string)
      // if one value is a string, assume a feature/value pair
      $query-string: breakpoint-concatenate($query-string, nth($breakpoint, 2), nth($breakpoint, 1))
    @else if (type-of(nth($breakpoint, 1)) == list)
      // for multidimensional lists, assume each item is a feature value pair
      @each $item in $breakpoint
        @if type-of($item) == list
          // $query-string: #{$query-string}unquote("and (#{nth($item, 1)}:  #{nth($item, 2)}) ")
          $query-string: breakpoint-concatenate($query-string, nth($item, 2), nth($item, 1))
        @else
          // handle one-sided features (ie. monochrome)
          $query-string: breakpoint-concatenate($query-string, $item, false)
  // write out the media query
  @media #{$query-string}
    @content
